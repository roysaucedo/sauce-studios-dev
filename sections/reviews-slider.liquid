{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<style>
  /* Container and layout */
  .slider-{{ section.id }} {
    position: relative;
    padding: 40px 0;
  }

  .slider-{{ section.id }}__heading,
  .slider-{{ section.id }}__subheading {
    text-align: center;
  }

  .slider-{{ section.id }}__container {
    position: relative;
    overflow: hidden;
    padding: 0 40px;
  }

  /* Track and slides */
  .slider-{{ section.id }}__track {
    display: flex;
    transition: transform 0.3s ease-in-out;
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }

  .slider-{{ section.id }}__track--dragging {
    transition: none;
    cursor: grabbing;
  }

  .slider-{{ section.id }}__slide {
    flex: 0 0 calc(100% / {{ section.settings.desktop_slides_to_show }});
    padding: 0 15px;
    box-sizing: border-box;
  }

  /* Content styling */
  .slider-{{ section.id }}__content {
    background: #f7f7f7;
    padding: 20px;
    border-radius: 8px;
    height: 100%;
    display: flex;
    flex-direction: column;
    transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }

  .slider-{{ section.id }}__image {
    width: 100%;
    height: auto;
    aspect-ratio: 3 / 2.5;
    object-fit: cover;
    margin-bottom: 20px;
    border-radius: 10px;
    will-change: transform;
    transform: translateZ(0);
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }

  .slider-{{ section.id }}__stars {
    margin-bottom: 10px;
  }

  .slider-{{ section.id }}__text {
    margin-bottom: 15px;
  }

  .slider-{{ section.id }}__author {
    font-weight: bold;
  }

  .slider-{{ section.id }}__location {
    color: #666;
    font-size: 0.9em;
    margin-bottom: 15px;
  }

  .slider-{{ section.id }}__cta {
    margin-top: auto;
    padding-top: 15px;
  }

  /* Navigation buttons */
  .slider-{{ section.id }}__button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: white;
    border: 1px solid #ddd;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;
  }

  .slider-{{ section.id }}__button:hover {
    background: #f5f5f5;
  }

  .slider-{{ section.id }}__button--prev {
    left: 1%;
  }

  .slider-{{ section.id }}__button--next {
    right: 1%;
  }

  .slider-{{ section.id }}__button svg {
    width: 20px;
    height: 20px;
    fill: currentColor;
  }

  /* Responsive adjustments */
  @media screen and (max-width: 767px) {
    .slider-{{ section.id }}__slide {
      flex: 0 0 calc(100% / {{ section.settings.mobile_slides_to_show }});
    }

    .slider-{{ section.id }}__container {
      padding: 0 30px;
    }

    .slider-{{ section.id }}__button {
      width: 30px;
      height: 30px;
    }
  }
</style>

<section class="slider-{{ section.id }} section-{{ section.id }}-padding">
  {% if section.settings.heading != blank %}
    <h2 class="slider-{{ section.id }}__heading h1">{{ section.settings.heading }}</h2>
  {% endif %}

  {% if section.settings.subheading != blank %}
    <div class="slider-{{ section.id }}__subheading">
      <p>{{ section.settings.subheading }}</p>
    </div>
  {% endif %}

  <div class="slider-{{ section.id }}__container">
    <button class="slider-{{ section.id }}__button slider-{{ section.id }}__button--prev" aria-label="Previous slide">
      <svg viewBox="0 0 24 24">
        <path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/>
      </svg>
    </button>

    <button class="slider-{{ section.id }}__button slider-{{ section.id }}__button--next" aria-label="Next slide">
      <svg viewBox="0 0 24 24">
        <path d="M8.59 16.59L10 18l6-6-6-6-1.41 1.41L13.17 12z"/>
      </svg>
    </button>

    <div class="slider-{{ section.id }}__track">
      {% for block in section.blocks %}
        <div class="slider-{{ section.id }}__slide" {{ block.shopify_attributes }}>
          <div class="slider-{{ section.id }}__content">
            {% if block.settings.image != blank %}
              <img
                src="{{ block.settings.image | image_url: height: 800 }}"
                alt="{{ block.settings.image.alt | escape }}"
                loading="lazy"
                width="{{ block.settings.image.width }}"
                height="{{ block.settings.image.height }}"
                class="slider-{{ section.id }}__image"
              >
            {% else %}
              <div class="slider-{{ section.id }}__image">
                {{ 'product-1' | placeholder_svg_tag }}
              </div>
            {% endif %}

            <div class="slider-{{ section.id }}__stars">
              <img
                src="https://cdn.shopify.com/s/files/1/0317/8709/0060/files/starsGroup_19.svg?v=1734390402"
                width="100"
                height="20"
                alt="5 stars"
              >
            </div>

            <div class="slider-{{ section.id }}__text">
              {{ block.settings.review_text }}
            </div>

            {% if block.settings.author != blank %}
              <div class="slider-{{ section.id }}__author">
                {{ block.settings.author }}
              </div>
            {% endif %}

            {% if block.settings.location != blank %}
              <div class="slider-{{ section.id }}__location">
                {{ block.settings.location }}
              </div>
            {% endif %}

            {% if block.settings.cta_text != blank %}
              <div class="slider-{{ section.id }}__cta">
                <a href="{{ block.settings.cta_link }}">
                  {{ block.settings.cta_text }}
                </a>
              </div>
            {% endif %}
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Get elements
    const section = document.querySelector('.slider-{{ section.id }}');
    const track = section.querySelector('.slider-{{ section.id }}__track');
    const slides = Array.from(track.children);
    const prevButton = section.querySelector('.slider-{{ section.id }}__button--prev');
    const nextButton = section.querySelector('.slider-{{ section.id }}__button--next');
    
    // Configuration
    let currentIndex = 0;
    let isMobile = window.innerWidth <= 767;
    let slidesPerView = isMobile ? 
      {{ section.settings.mobile_slides_to_show }} : 
      {{ section.settings.desktop_slides_to_show }};
    
    // Drag variables
    let isDragging = false;
    let startPosition = 0;
    let currentTranslate = 0;
    let prevTranslate = 0;
    let animationID = 0;
    let dragDistance = 0;
    
    // Initialize slider
    updateButtonStates();
    
    // Event listeners
    prevButton.addEventListener('click', () => move('prev'));
    nextButton.addEventListener('click', () => move('next'));
    
    // Touch events
    track.addEventListener('touchstart', dragStart, { passive: false });
    track.addEventListener('touchmove', drag, { passive: false });
    track.addEventListener('touchend', dragEnd);
    
    // Mouse events
    track.addEventListener('mousedown', dragStart);
    track.addEventListener('mousemove', drag);
    track.addEventListener('mouseup', dragEnd);
    track.addEventListener('mouseleave', dragEnd);
    
    // Prevent context menu on long press
    track.addEventListener('contextmenu', e => e.preventDefault());
    
    // Disable default image drag
    track.querySelectorAll('img').forEach(img => {
      img.draggable = false;
    });
    
    // Handle resize
    window.addEventListener('resize', () => {
      const wasMobile = isMobile;
      isMobile = window.innerWidth <= 767;
      
      if (wasMobile !== isMobile) {
        slidesPerView = isMobile ? 
          {{ section.settings.mobile_slides_to_show }} : 
          {{ section.settings.desktop_slides_to_show }};
        
        currentIndex = 0;
        moveSlider();
        updateButtonStates();
      }
    });
    
    // Move slider to the given direction
    function move(direction) {
      if (direction === 'prev' && currentIndex > 0) {
        currentIndex--;
      } else if (direction === 'next' && 
                currentIndex < slides.length - slidesPerView) {
        currentIndex++;
      }
      
      moveSlider();
      updateButtonStates();
    }
    
    // Update slider position
    function moveSlider() {
      const slideWidth = track.offsetWidth / slidesPerView;
      const offset = -currentIndex * slideWidth;
      
      track.style.transition = 'transform 0.3s ease-out';
      track.style.transform = `translate3d(${offset}px, 0, 0)`;
      
      // Reset transition after animation
      setTimeout(() => {
        track.style.transition = '';
      }, 300);
    }
    
    // Update button states
    function updateButtonStates() {
      prevButton.disabled = currentIndex <= 0;
      nextButton.disabled = currentIndex >= slides.length - slidesPerView;
      
      prevButton.style.opacity = prevButton.disabled ? '0.5' : '1';
      nextButton.style.opacity = nextButton.disabled ? '0.5' : '1';
    }
    
    // Drag functions
    function dragStart(e) {
      if (e.type === 'touchstart') {
        startPosition = e.touches[0].clientX;
      } else {
        startPosition = e.clientX;
        e.preventDefault();
      }
      
      isDragging = true;
      
      // Get current transform value
      const transform = window.getComputedStyle(track).getPropertyValue('transform');
      if (transform !== 'none') {
        prevTranslate = parseInt(transform.split(',')[4]) || 0;
      } else {
        prevTranslate = 0;
      }
      
      track.classList.add('slider-{{ section.id }}__track--dragging');
      cancelAnimationFrame(animationID);
    }
    
    function drag(e) {
      if (!isDragging) return;
      
      // Calculate move distance
      let currentPosition = 0;
      if (e.type === 'touchmove') {
        currentPosition = e.touches[0].clientX;
        e.preventDefault();
      } else {
        currentPosition = e.clientX;
      }
      
      dragDistance = currentPosition - startPosition;
      currentTranslate = prevTranslate + dragDistance;
      
      // Set boundaries
      const slideWidth = track.offsetWidth / slidesPerView;
      const maxTranslate = 0;
      const minTranslate = -slideWidth * (slides.length - slidesPerView);
      
      currentTranslate = Math.max(Math.min(currentTranslate, maxTranslate), minTranslate);
      
      // Apply transform with GPU acceleration
      track.style.transform = `translate3d(${currentTranslate}px, 0, 0)`;
    }
    
    function dragEnd() {
      if (!isDragging) return;
      isDragging = false;
      
      track.classList.remove('slider-{{ section.id }}__track--dragging');
      
      // Calculate which slide to snap to
      const slideWidth = track.offsetWidth / slidesPerView;
      const moveThreshold = slideWidth * 0.2; // 20% threshold
      
      if (Math.abs(dragDistance) > moveThreshold) {
        if (dragDistance > 0 && currentIndex > 0) {
          currentIndex--;
        } else if (dragDistance < 0 && 
                  currentIndex < slides.length - slidesPerView) {
          currentIndex++;
        }
      }
      
      // Reset drag distance
      dragDistance = 0;
      
      // Snap to correct position
      moveSlider();
      updateButtonStates();
    }
  });
</script>

{% schema %}
{
  "name": "🔥 Testimonial Slider",
  "settings": [
      {
        "type": "header",
        "content": "Need Support for this section?",
        "info": "Feel free to reach out here: [Support form](https://tally.so/r/npWopV)"
      },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Customer Reviews"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Sub-Heading",
      "default": "5,000+ Happy Customers!"
    },
    {
      "type": "range",
      "id": "desktop_slides_to_show",
      "min": 1,
      "max": 4,
      "step": 1,
      "label": "Reviews to show on desktop",
      "default": 3
    },
    {
      "type": "range",
      "id": "mobile_slides_to_show",
      "min": 1,
      "max": 3,
      "step": 1,
      "label": "Reviews to show on mobile",
      "default": 1
    }
  ],
  "blocks": [
    {
      "type": "review",
      "name": "Review",
      "settings": [

        {
          "type": "image_picker",
          "id": "image",
          "label": "Review Image"
        },
        {
          "type": "richtext",
          "id": "review_text",
          "label": "Review Text",
          "default": "<h2>Review Title! (LOVE IT!)</h2><p>Add Review Here</p>"
        },
        {
          "type": "text",
          "id": "author",
          "label": "Author Name",
          "default": "Roy Sauce"
        },
        {
          "type": "text",
          "id": "location",
          "label": "Author Location",
          "default": "Los Angeles, CA"
        },
        {
          "type": "url",
          "id": "cta_link",
          "label": "CTA Link"
        },
        {
          "type": "text",
          "id": "cta_text",
          "label": "CTA Text",
          "default": "Shop now →"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Review Slider",
      "blocks": [
        {
          "type": "review"
        },
        {
          "type": "review"
        },
        {
          "type": "review"
        }
      ]
    }
  ]
}
{% endschema %}
